# Generated by Django 5.2.4 on 2025-08-05 07:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0004_post_attachment_message_report'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='日期')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='总用户数')),
                ('total_posts', models.PositiveIntegerField(default=0, verbose_name='总帖子数')),
                ('total_comments', models.PositiveIntegerField(default=0, verbose_name='总评论数')),
                ('total_views', models.PositiveIntegerField(default=0, verbose_name='总浏览量')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='新增用户数')),
                ('new_posts', models.PositiveIntegerField(default=0, verbose_name='新增帖子数')),
                ('new_comments', models.PositiveIntegerField(default=0, verbose_name='新增评论数')),
            ],
            options={
                'verbose_name': '网站统计',
                'verbose_name_plural': '网站统计',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='标签名称')),
                ('description', models.TextField(blank=True, verbose_name='标签描述')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='标签颜色')),
                ('posts_count', models.PositiveIntegerField(default=0, verbose_name='使用次数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'ordering': ['-posts_count', 'name'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='review_notes',
            field=models.TextField(blank=True, verbose_name='审核备注'),
        ),
        migrations.AddField(
            model_name='post',
            name='reviewed_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='审核时间'),
        ),
        migrations.AddField(
            model_name='post',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_posts', to=settings.AUTH_USER_MODEL, verbose_name='审核人'),
        ),
        migrations.AddField(
            model_name='post',
            name='status',
            field=models.CharField(choices=[('pending', '待审核'), ('approved', '已通过'), ('rejected', '已拒绝')], default='pending', max_length=10, verbose_name='审核状态'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_moderate',
            field=models.BooleanField(default=False, verbose_name='可审核内容'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='can_post_without_review',
            field=models.BooleanField(default=False, verbose_name='免审核发帖'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='experience_points',
            field=models.PositiveIntegerField(default=0, verbose_name='经验值'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='level',
            field=models.IntegerField(choices=[(1, '新手'), (2, '初级用户'), (3, '中级用户'), (4, '高级用户'), (5, '专家')], default=1, verbose_name='用户等级'),
        ),
        migrations.RemoveField(
            model_name='post',
            name='tags',
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=20, verbose_name='活动类型')),
                ('target_id', models.PositiveIntegerField(verbose_name='目标ID')),
                ('target_type', models.CharField(max_length=20, verbose_name='目标类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='活动时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户活动',
                'verbose_name_plural': '用户活动',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, to='community.tag', verbose_name='标签'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='关注时间')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='关注者')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='被关注者')),
            ],
            options={
                'verbose_name': '关注关系',
                'verbose_name_plural': '关注关系',
                'ordering': ['-created_at'],
                'unique_together': {('follower', 'following')},
            },
        ),
    ]
